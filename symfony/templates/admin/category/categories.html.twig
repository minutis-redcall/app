{% extends 'base.html.twig' %}

{% import 'macros.html.twig' as macros %}

{% block body %}

    <h1>{{ 'admin.category.title'|trans }}</h1>

    <p>{{ 'admin.category.description'|trans }}</p>

    {# Modal: Create or update a category (will be filled up through XHR) #}
    {% set buttons %}
        <a href="#" id="category-form-save" class="btn btn-success" data-uri="">
            {{ 'base.button.save'|trans }}
        </a>
    {% endset %}

    {{ macros.modal('category-form', 'base.wait'|trans, '', buttons) }}

    {# Modal: Badge list #}
    {{ macros.modal('category-badges', 'base.wait'|trans, '') }}

    {{ form(search) }}

    <div id="categories" class="row">
        {% for category in categories %}
            <div class="col-4" id="category-{{ category.id }}" style="padding:5px;">
                {{ include('admin/category/category.html.twig', {category: category}) }}
            </div>
        {% endfor %}
    </div>

    {{ macros.pager(categories) }}

    <br/>

    <div class="text-right">
        <a href="#" class="btn btn-secondary open-category-form" data-uri="{{ path('admin_category_form') }}">
            {{ 'admin.category.create'|trans }}
        </a>
    </div>

    <div class="text-center">
        <a href="{{ path('admin_badge_index') }}" class="btn btn-secondary">
            {{ 'base.button.back'|trans }}
        </a>
    </div>

    <br/><br/>

    <script type="text/javascript">

        {# Create / Update a category name / priority #}
        $('body').on('click', '.open-category-form', function (e) {
            e.preventDefault();

            $('#category-form').modal();

            var uri = $(this).data('uri');
            $('#category-form .modal-title').html('{{ 'base.wait'|trans }}');
            $('#category-form .modal-body').html('');
            $('#category-form-save').addClass('d-none');

            $.get(uri, function (response) {
                $('#category-form-save').data('uri', uri);
                $('#category-form .modal-title').html(response.title);
                $('#category-form .modal-body').html(response.body);
                $('#category-form-save').removeClass('d-none');
            });
        });

        {# Save button on the Create / Update modal #}
        $('#category-form-save').click(function (e) {
            e.preventDefault();

            var uri = $('#category-form-save').data('uri');
            if (!uri) {
                return;
            }

            $.post(uri, $('#category-form form').serialize(), function (response) {
                if (response.saved) {
                    $('#category-form').modal('hide');

                    if ($('#category-' + response.id).length) {
                        $('#category-' + response.id).html(response.view);
                    } else {
                        $('#categories').prepend(
                            '<div id="category-' + response.id + '" class="col-4">' + response.view + '</div>'
                        );
                    }

                    return;
                }
                $('#category-form .modal-title').html(response.title);
                $('#category-form .modal-body').html(response.body);
            });
        });

        {# Update badges in the category #}
        $('body').on('click', '.open-category-badges', function (e) {
            e.preventDefault();

            $('#category-badges').modal();

            var uri = $(this).data('uri');
            $('#category-badges .modal-title').html('{{ 'base.wait'|trans }}');
            $('#category-badges .modal-body').html('');

            $.get(uri, function (response) {
                $('#category-badges .modal-title').html(response.title);
                $('#category-badges .modal-body').html(response.body);
                $('#category-badges .modal-body .flexdatalist').flexdatalist();
            });
        });

        {# Delete button #}
        $('body').on('click', '.delete-category', function (e) {
            e.preventDefault();

            var that = $(this);

            if (!confirm('{{ 'admin.category.delete'|trans }}'.replace('%name%', that.data('name')))) {
                return;
            }

            $.post(that.data('uri'), function () {
                $('#category-' + that.data('id')).remove();
            });
        });

        {# Delete a badge in a category #}
        $('body').on('click', '.delete-badge-from-category', function (e) {
            e.preventDefault();
            var that = $(this);
            if (confirm(that.data('confirm'))) {
                $.post(that.data('uri'), function () {
                    $('.' + that.data('row')).remove();
                    $.get('{{ path('admin_category_refresh', {id: 'categoryId'}) }}'.replace('categoryId', that.data('id')), function (html) {
                        $('#category-' + that.data('id')).html(html);
                    });
                });
            }
        })

    </script>

{% endblock %}
