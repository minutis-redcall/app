
{% form_theme form 'new_communication/form_theme.html.twig' %}

{{ form_row(form.volunteers) }}

{% set max_length_sms = constant('App\\Entity\\Message::MAX_LENGTH_SMS') %}
{% set max_length_email = constant('App\\Entity\\Message::MAX_LENGTH_EMAIL') %}

<div id="message-container">
    <div class="h4">{{ 'form.communication.fields.message'|trans }}</div>

    {{ form_row(form.type) }}

    <div id="message-subject" class="d-none">
        {{ form_row(form.subject) }}
    </div>

    {{ form_label(form.message) }}
    <div class="textarea-wrapper">
        {{ form_widget(form.message) }}
    </div>
    <div class="float-right">
        <span id="message-size">0</span>
        /
        <span id="message-max">{{ max_length_sms }}</span>
    </div>
</div>

<div class="clearfix"></div>

<div class="h4">{{ 'form.communication.fields.response_title'|trans }}</div>

{{ form_label(form.answers) }}

{{ render(controller('\\App\\Controller\\PrefilledAnswersController::renderWidget', {campaignId: campaign.id|default(null)})) }}

<div id="answer-collection" data-index="{{ form.answers.children|length }}">
    {{ form_row(form.answers, {label: false}) }}
    <a id="add-answer" href="#" class="btn btn-light" style="width:100%;">{{ 'form.communication.fields.add_answer'|trans }}</a>
</div>

<br/>

<div id="message-prefix">
    {{ form_row(form.prefix) }}
</div>

{{ form_row(form.multipleAnswer) }}

<div id="message-geo-location">
    <div class="h4">{{ 'form.communication.fields.other_options'|trans }}</div>

    {{ form_row(form.geoLocation) }}
</div>

<div class="h4">{{ 'form.communication.fields.preview'|trans }}</div>

<div id="message-preview" style="background-color:#eeeeee;padding:5px;margin-bottom:10px;">
    &nbsp;
</div>

<div id="message-calc" style="margin-bottom:10px;">
    {{ 'form.communication.fields.length'|trans }}
    <span id="message-length">--</span>
    <br/>
    {{ 'form.communication.fields.cost'|trans }}
    <span id="message-cost">--</span>
</div>

<script type="text/javascript" src="{{ asset('js/jquery.collection.js') }}"></script>
<script type="text/javascript">

    {# Update message size automatically #}
    function updateMessageSize() {
        var textArea = $('#{{ form.message.vars.id }}');
        if (textArea.val().length > $('#message-max').html()) {
            textArea.val(
                textArea.val().substr(0, $('#message-max').html())
            );
        }
        $('#message-size').html(textArea.val().length);
    }

    $('#{{ form.message.vars.id }}').keyup(updateMessageSize);

    {# Disables "enter" key on input fields #}
    $('form').keypress(function (e) {
        if (e.keyCode == 13 && $(e.target).not('textarea, button').length) {
            e.preventDefault();
        }
    });

    {# Refresh preview if form is changed #}
    var previewTimeout = null;
    function refreshPreview() {
        clearTimeout(previewTimeout);
        previewTimeout = setTimeout(function () {
            $.post('{{ path('communication_preview') }}', $('form').serialize(), function (data) {
                if (data.success) {
                    $('#message-preview').html(nl2br(data.message));
                    $('#message-cost').html(data.cost);
                    $('#message-length').html(data.length);
                } else {
                    $('#message-preview').html('&nbsp;');
                    $('#message-cost').html('--');
                    $('#message-length').html('--');
                }
            });
        }, 1000);
    }
    $('body').on('change keyup', 'input, textarea, select', function () {
        refreshPreview();
    });

    {# When switching from email or sms, apply few changes #}
    function updateMaxMessageSize() {
        if ($('#{{ form.type.vars.id }}').find('input:checked').val() === '{{ constant('App\\Entity\\Communication::TYPE_SMS') }}') {
            $('#message-max').html({{ max_length_sms }});
            $('#message-calc').removeClass('d-none');
            $('#message-subject').addClass('d-none');
            $('#message-prefix').removeClass('d-none');
            $('#message-geo-location').removeClass('d-none');
            $('textarea, .textarea-wrapper').css('height', '78px');
        } else {
            $('#message-max').html({{ max_length_email }});
            $('#message-calc').addClass('d-none');
            $('#message-subject').removeClass('d-none');
            $('#message-prefix').addClass('d-none');
            $('#message-geo-location').addClass('d-none');
            $('textarea, .textarea-wrapper').css('height', '150px');
        }

        updateMessageSize();
    }

    $('#{{ form.type.vars.id }}').change(function () {
        updateMaxMessageSize();
    });
    updateMaxMessageSize();

    {# Collection of answers #}
    $('#add-answer').click(function(e) {
        e.preventDefault();
        var collection = $('#{{ form.answers.vars.id }}');
        var prototype = collection.data('prototype');

        var index = 0;
        if (collection.data('index') !== undefined) {
            index = collection.data('index');
        }

        $('#answer-separator').before(prototype.replace(/__name__/g, index));
        collection.data('index', index + 1);

        refreshPreview();
    });

    {# Initialize collection with 2 answers #}
    $('#add-answer').click();
    $('#add-answer').click();

    {# Answer removal #}
    $('body').on('click', '.remove-answer', function(e) {
        e.preventDefault();
        var index = $(this).data('index');
        $('#answer-nb-' + index).remove();
        refreshPreview();

        $('#add-answer').removeClass('d-none');
    });

    {# Limit prefix to 1 uppercase char #}
    $('#{{ form.prefix.vars.id }}').keyup(function() {
        var that = $(this);
        that.val(
            that.val().toUpperCase().substring(0, 1)
        );
    });

    {# Disable submit button at submission to prevent sending communication twice #}
    $('form').submit(function() {
        $('#{{ form.submit.vars.id }}').prop('disabled', 'disabled');
    });

</script>
